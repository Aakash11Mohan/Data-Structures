#include <stdio.h>
#include <stdlib.h>

void merge(int a[], int lb, int mid, int ub) 
{ 
    int i, j, k; 
    int n1 = mid - lb + 1; 
    int n2 = ub - mid; 
  
    /* create temp arrays */
    int l[n1], r[n2]; 
  
    /* Copy data to temp arrays L[] and R[] */
    for (i = 0; i < n1; i++) 
        l[i] = a[lb + i]; 
    for (j = 0; j < n2; j++) 
        r[j] = a[mid + 1 + j]; 
  
    /* Merge the temp arrays back into arr[l..r]*/
    i = 0; // Initial index of first subarray 
    j = 0; // Initial index of second subarray 
    k = lb; // Initial index of merged subarray 
    while (i < n1 && j < n2) { 
        if (l[i] <= r[j]) { 
            a[k] = l[i]; 
            i++; 
        } 
        else 
        { 
            a[k] = r[j]; 
            j++; 
        } 
        k++; 
    } 
  
    /* Copy the remaining elements of L[], if there 
       are any */
    while (i < n1) { 
        a[k] = l[i]; 
        i++; 
        k++; 
    } 
  
    /* Copy the remaining elements of R[], if there 
       are any */
    while (j < n2) { 
        a[k] = r[j]; 
        j++; 
        k++; 
    } 
} 

void mergeSort(int a[],int lb, int ub) 
{ 
    if(lb<ub)
    {
        int mid;
        mid=((lb+ub)/2);
        mergeSort(a,lb,mid);
        mergeSort(a,mid+1,ub);
        merge(a,lb,mid,ub);
    }
} 

void print(int a[], int n)
{
    int i;
    for(i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
}

int main()
{
    int a[]={10,9,8,7,6,5,4,3,2,1};
    int n= (sizeof(a)/sizeof(a[0]));
    printf("Before Sorting:\n");
    print(a,n);
    mergeSort(a,0,n-1);
    printf("\nAfter Sorting:\n");
    print(a,n);
}
