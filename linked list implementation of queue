#include <stdio.h>
#include <stdlib.h>

struct Node
{
    int data;
    struct Node *next;
};
struct Node *front;
struct Node *rear;

void Enqueue(int x)
{
    struct Node *temp= (struct Node*)malloc(sizeof(struct Node));
    temp->data=x;
    temp->next=NULL;
    if(front==NULL && rear==NULL)
    {
        front=rear=temp;
    }
    else
    {
        rear->next=temp;
        rear=temp;
    }
}

void Dequeue()
{
    struct Node *temp=front;
    if(front==NULL && rear==NULL)
    {
        printf("Underflow\n");
    }
    else
    {
        printf("Dequeued item is:%d\n",front->data);
        front=front->next;
        free(temp);
    }
}

void Peek()
{
    if(front==NULL && rear==NULL)
    {
        printf("Queue is Empty\n");
    }
    else
    {
        printf("Top element:%d\n",front->data);
    }
}

void Print()
{
    struct Node *temp=front;
    if(front==NULL && rear==NULL)
    {
        printf("Nothing to print\n");
    }
    else
    {
        printf("List is:\n");
        while(temp!=NULL)
        {
            printf("%d",temp->data);
            temp=temp->next;
        }
        printf("\n");
    }
}
int main()
{
    front=NULL;
    rear=NULL;
    Enqueue(3);
    Enqueue(2);
    Enqueue(1);
    Print();
    Peek();
    Dequeue();
    Peek();
    Print();
    return 0;
}
