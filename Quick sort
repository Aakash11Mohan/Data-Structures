#include <stdio.h>
#include <stdlib.h>

void swap(int *a,int *b)
{
    int t;
    t=*a;
    *a=*b;
    *b=t;
}

int partition (int a[], int lb, int ub)  
{  
    int pivot = a[ub]; // pivot  
    int pI = (lb - 1); // Index of smaller element  
  
    for (int i = lb; i <= ub - 1; i++)  
    {  
        // If current element is smaller than the pivot  
        if (a[i] < pivot)  
        {  
            pI++; // increment index of smaller element  
            swap(&a[pI], &a[i]);  
        }  
    }  
    swap(&a[pI + 1], &a[ub]);  
    return (pI + 1);  
}  

void quickSort(int a[],int lb, int ub) 
{ 
    if(lb<ub)
    {
        int pI;
        pI=partition(a,lb,ub);
        quickSort(a,lb,pI-1);
        quickSort(a,pI+1,ub);
    }
} 

void print(int a[], int n)
{
    int i;
    for(i=0;i<n;i++)
    {
        printf("%d ",a[i]);
    }
}

int main()
{
    int a[]={10,9,8,7,6,5,4,3,2,1};
    int n= (sizeof(a)/sizeof(a[0]));
    printf("Before Sorting:\n");
    print(a,n);
    quickSort(a,0,n-1);
    printf("\nAfter Sorting:\n");
    print(a,n);
}
